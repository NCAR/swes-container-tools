version: 2
jobs:
  build:
    docker:
      - image: circleci/python:latest

    steps:
      - add_ssh_keys:
          fingerprints:
            - "71:f3:13:88:05:74:a8:94:ab:70:e8:e2:5c:24:7d:a5"

      - checkout

      - setup_remote_docker

      - run:
          name: Configure git
          command: |
              git config --global user.email "sweg-ci@ucar.edu"
              git config --global user.name "NCAR SWEG CI"

      - run:
          name: Update configuration or run tests
          command: |
              ./getTZ --dump >./zoneinfo
              install_zoneinfo=false
              if [ ! -f .zoneinfo ] ; then
                  echo "Installing missing .zoneinfo"
                  install_zoneinfo=true
              elif cmp -s zoneinfo .zoneinfo ; then
                  echo ".zoneinfo is up-to-date"
              else
                  echo "Installing newer .zoneinfo"
                  install_zoneinfo=true
              fi
              if $install_zoneinfo ; then
                  mv zoneinfo .zoneinfo
                  git add .zoneinfo
                  git commit -m 'Updated .zoneinfo'
                  mkdir -p ~/.ssh/
                  echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
                  git push origin HEAD:master
                  # Quit this build
                  exit 0
              fi
              echo "Run tests"
              docker create -v /scripts --name scripts alpine:latest /bin/true
              docker cp ./ scripts:/scripts
              for baseimage in \
                  alpine:latest \
                  debian:oldstable \
                  debian:stable \
                  centos:centos7 \
                  centos:centos8 \
              ; do
                  t=`expr "$baseimage" : '.*:\(.*\)'`
                  if [ -f .circleci/Dockerfile-$t ] ; then
                      docker build -t new$t -f .circleci/Dockerfile-$t .circleci
                      baseimage=new$t
                  fi
                  echo $baseimage:
                  docker run --rm --volumes-from scripts $baseimage /scripts/test/runalltests.sh
                  echo
              done

      - run:
          name: "Generate documentation"
          command: |
              set +e
              git clone --depth 1 https://${GH_TOKEN}@github.com/NCAR/citools.git /tmp/citools
              REPO=gwilliam-ucar-edu/swes-container-tools
              export REPO
              git clone https://${GH_TOKEN}@github.com/$REPO.wiki.git /tmp/wiki
              /tmp/citools/citools-docgen --bindir=`pwd` /tmp/wiki
              cd /tmp/wiki
              git add .
              git commit -m 'Latest doc build'
              #git push
                  
workflows:
  version: 2
  build:
    jobs:
      - build:
          context: sweg
          filters:
            branches:
              only: /.*/
