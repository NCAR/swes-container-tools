#!/bin/sh
PROG=check-mysql
DESC="Script to check if mysql server is running"
USAGE1="$PROG [-v|--verbose] [-w|--wait=secs]"
USAGE2="$PROG -h|--help"
HELP_TEXT="
        $PROG checks if the \"mysql\" wrapper script can actually connect with
        and query the mysql database. It returns 0 if and only if the
        server responds to a \"show tables\" command with a non-empty list.

        The following options are supported:

        -v|--verbose
            Do not suppress error messages. Without this option, no output
            or error messages will be displayed.

        -w|--wait=secs
            Wait up to the given number of seconds for the server to respond.
"
SCRIPTDIR=`cd \`dirname $0\`; pwd`
MYSQL="${MYSQL:-${SCRIPTDIR}/mysql}"
DBCHECK_SLEEP_SECS=${DBCHECK_SLEEP_SECS:-10}
DBCHECK_TIMEOUT_SECS=0
SILENT=true

while [ $# != 0 ] ; do
    arg="$1"
    shift
    case $arg in
        -h|--help)
            cat <<EOF
NAME
        $PROG - $DESC

SYNOPSIS
        $USAGE1
        $USAGE2

DESCRIPTION$HELP_TEXT
EOF
            exit 1 ;;

        -w[0-9]*)
            DBCHECK_TIMEOUT_SECS=`expr "$arg" : '-w\(.*\)'` ;;

        -[a-z]?*)
            opt=`expr "$arg" : '-\([a-z]\).*'`
            otheropts=`expr "$arg" : '-[a-z]\(.*\)'`
            set : -${opt} "-${otheropts}" "$@"
            shift ;;

        -w)
            DBCHECK_TIMEOUT_SECS="${1:-0}"
            shift ;;

        --wait=[0-9]*)
            DBCHECK_TIMEOUT_SECS=`expr "$arg" : '--wait=\(.*\)'` ;;

        -v|--verbose)
            SILENT=false ;;

        -*)
            cat >&2 <<EOF
$PROG: invalid option: $arg
Usage:
  $USAGE1
  $USAGE2
EOF
            exit 1 ;;
    esac
done
expr "$DBCHECK_TIMEOUT_SECS" : '[0-9][0-9]*$' >/dev/null 2>&1
if [ $? != 0 ] ; then
    echo "$PROG: invalid argument to -w|--wait: expecting unsigned integer" >&2
    exit 1
fi

if $SILENT ; then
    exec 2>/dev/null
fi

elapsed=0
while true ; do
    out=`echo "show tables" | ${MYSQL} | wc -l | tr -d ' \t'`
    if [ ":$out" != ":0" ] ; then
        exit 0
    fi
    if [ $elapsed -ge $DBCHECK_TIMEOUT_SECS ] ; then
        exit 1
    fi
    sleep ${DBCHECK_SLEEP_SECS}
    elapsed=`expr $elapsed + ${DBCHECK_SLEEP_SECS}`
done


              
